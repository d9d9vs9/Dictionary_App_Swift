default_platform(:ios)

platform :ios do

  desc "Run Unit Tests" 
  lane :unit_tests do
    run_tests(workspace: ENV["WORKSPACE"],
              devices: [ENV["IPHONE_SE_1ST_GE"]],
              scheme: ENV["SCHEME"])
  end

  desc "Incrementing Build Number"  
  lane :increment_build_num do    
    version = get_version_number(xcodeproj: ENV["XCODEPROJ"])
    build_number = increment_build_number(build_number: "1")
    commit_version_bump(
      xcodeproj: ENV["XCODEPROJ"],
      message: "[ver++] v#{version} (#{build_number})"
    )
  end

  desc "Build ipa"  
  lane :build_ipa do
    install_provisioning_profile(path: ENV["FULL_PATH_TO_PROVISION_PROFILE"]) # This will install provision profiles at run time if needed when you run the fastlane lane
    gym(
      workspace: ENV["WORKSPACE"],
      scheme: ENV["SCHEME"],
      output_directory: ENV["DIRECTORY_WHERE_IPA_WILL_BE_SAVED"],
      output_name: ENV["OUTPUT_NAME"],
      export_method: "app-store",
      include_bitcode: false,
      clean: true)    
    end

  desc "Distribute via pilot" 
  lane :distribute do
    pilot(
	username: ENV["ITUNES_CONNECT_USER"],
	wait_processing_interval: 30,
	distribute_external: false,
	skip_submission: true, #allows build script to end before processing the binary        
	ipa: "MyDictionary_App_Swift.ipa" #path of the ipa generated by your build script
   )
  end

  desc "Releae App to TestFlight"
  lane :release_app_to_testflight do

    # Run Unit Tests
    unit_tests

    # Increment Build Number
    increment_build_num

    # Build ipa
    build_ipa

    # Distribute via pilot
    distribute

  end
  
end
